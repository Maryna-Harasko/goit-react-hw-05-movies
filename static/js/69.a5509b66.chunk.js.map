{"version":3,"file":"static/js/69.a5509b66.chunk.js","mappings":"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","sources":["Services/fetch.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/MoviesInfo/MoviesInfo.styled.jsx","components/MoviesInfo/MoviesInfo.jsx","components/BackBtn/BackBtn.styled.jsx","components/BackBtn/BackBtn.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '89cdef6951461333339e0f595b8c2655';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () =>{\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n}\n\nexport const getSearchByQuery = async (query) => {\n  const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n  return data;\n}\n\nexport const getMoviesByID = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport const getMoviesCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport const getMoviesReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return data;\n}","import styled from \"styled-components\";\n\nexport const SectionEl = styled.section`\n  padding-top: 14px;\n  padding-bottom: 20px;\n`\n\nexport const Container = styled.div`\n  margin: auto;\n`","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { SectionEl, Container } from \"./Section.styled\";\n\nexport const Section = ({children}) =>{\n  return(\n    <SectionEl>\n      <Container>{children}</Container>\n    </SectionEl>\n  )\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};","import styled from \"styled-components\";\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  gap: 15px;\n`\nexport const TextWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`\n","import React from 'react';\nimport { Section } from 'components/Section/Section';\nimport PropTypes from 'prop-types';\nimport { InfoWrap, TextWrap } from './MoviesInfo.styled';\n\nexport const MoviesInfo = ({\n  title,\n  genres,\n  vote_average,\n  overview,\n  poster_path,\n  release_date,\n}) => {\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n  const userScore = Math.round(vote_average * 10).toFixed(0);\n  const releaseDate = new Date(release_date).getFullYear();\n\n\n  return (\n    <Section>\n      <InfoWrap>\n        <img src={IMAGES_BASE_URL + poster_path} alt=\"title\" width=\"240\"/>\n        <TextWrap>\n          <h1>{title} {release_date && '('+ releaseDate +')'}</h1>\n          <h3>User Score: {vote_average && userScore}%</h3>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres && genres.map(genre => genre.name).join('  ')} </p>\n        </TextWrap>\n      </InfoWrap>\n    </Section>\n  );\n};\n\nMoviesInfo.propTypes = {\n  title: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    })),\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 150px;\n  height: 40px;\n  font-size: 24px;\n  font-weight: 700;\n  color: #ff0000cf;\n  border: 1px solid #483ac7;\n  border-radius: 10px;\n  text-align: center;\n  transition: color 400ms ease;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: #354a9d;\n}\n`","import PropTypes from 'prop-types';\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { BackLink } from './BackBtn.styled';\n\nexport const BackBtn = ({ path }) => {\n  return(\n    <BackLink to = {path}>\n      <FiArrowLeft style={{ width: 30, height: 30 }} />\n      <span>go back</span>\n    </BackLink>\n  )\n}\n\nBackBtn.propTypes = {\n  path: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const ContainerDetails = styled.div`\n  padding: 32px;\n`\nexport const ListPage = styled.ul`\n  display: flex;\n  gap: 15px;\n`\n\nexport const InfoPageLink = styled(NavLink)`\n  display: block;\n  margin-top: 20px;\n  cursor: pointer;\n  color: inherit;\n  font-size: 24px;\n  transition: color 400ms ease;\n\n  &:visited{\n    color: inherit;\n  }\n  \n  &:hover,\n  &:focus,\n  &:active {\n    color: #ff0000cf;\n  }\n`","import React, { Suspense, useEffect, useState } from \"react\";\nimport { Outlet, useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { Section } from \"components/Section/Section\";\nimport { MoviesInfo } from \"components/MoviesInfo/MoviesInfo\";\nimport { BackBtn } from \"components/BackBtn/BackBtn\";\nimport { getMoviesByID } from \"Services/fetch\"; \nimport { Loader } from \"components/Loader/Loader\";\nimport { ContainerDetails, ListPage, InfoPageLink } from \"./MovieDetails.styled\";\n\nconst MovieDetails = () =>{\n  const {movieId} = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [isSuccess, setSuccess] = useState(false);\n\n  const location = useLocation();\n  const path = location?.state?.from ?? '/';\n  const navigate = useNavigate();\n \n  useEffect(() =>{\n    setLoading(true);\n    getMoviesByID(movieId)\n      .then((res) =>{setMovieInfo(res);\n      setSuccess(true);\n    })\n      .catch(error => navigate('/', {replace: true}))\n      .finally(() => setLoading(false))\n  },[movieId, navigate])\n\n  return(\n    <Section>\n      <ContainerDetails>\n        <BackBtn path={path}/>\n        {isLoading ? (<Loader/>\n        ) : (\n          <>\n            { isSuccess && \n            <>\n            <MoviesInfo {...movieInfo}/>\n            <h3>Additional information</h3>\n            <ListPage>\n              <li>\n                <InfoPageLink to=\"cast\">Cast</InfoPageLink>\n              </li>\n              <li>\n                <InfoPageLink to=\"reviews\">Reviews</InfoPageLink>\n              </li>\n            </ListPage>\n            </>\n            }\n            <Suspense fallback={<Loader/>}>\n              <Outlet />\n            </Suspense>\n          </>\n        )}\n      </ContainerDetails>\n    </Section>\n  )\n}\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","getSearchByQuery","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMoviesByID","_ref3","_callee3","id","_yield$axios$get3","_context3","_x2","getMoviesCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMoviesReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","SectionEl","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Section","children","_jsx","InfoWrap","TextWrap","MoviesInfo","title","genres","vote_average","overview","poster_path","release_date","userScore","Math","round","toFixed","releaseDate","Date","getFullYear","_jsxs","src","alt","width","map","genre","name","join","BackLink","NavLink","BackBtn","path","to","FiArrowLeft","style","height","ContainerDetails","ListPage","InfoPageLink","_templateObject3","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","isSuccess","setSuccess","location","useLocation","state","from","navigate","useNavigate","useEffect","then","res","catch","error","replace","finally","Loader","_Fragment","_objectSpread","Suspense","fallback","Outlet"],"sourceRoot":""}